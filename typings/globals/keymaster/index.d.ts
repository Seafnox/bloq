// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/56295f5058cac7ae458540423c50ac2dcf9fc711/keymaster/keymaster.d.ts
interface KeymasterEvent {
    key: string;
    method: KeyHandler;
    mods: number[];
    scope: string;
    shortcut: string;
}

interface KeyHandler {
    (keyboardEvent: KeyboardEvent, keymasterEvent: KeymasterEvent) : void;
}

interface FilterEvent {
    target?: {
        tagName?: string;
    }
    srcElement?: {
        tagName?: string;
    }
}

interface Keymaster {

    (key: string, callback: KeyHandler): void;
    (key: string, scope: string, callback: KeyHandler): void;

    shift: boolean;
    alt: boolean;
    option: boolean;
    ctrl: boolean;
    control: boolean;
    command: boolean;

    setScope(scopeName: string): void;
    getScope():string;
    deleteScope(scopeName: string): void;

    noConflict(): void;

    unbind(key: string): void;
    unbind(key: string, scopeName: string): void;

    isPressed(keyCode: number): boolean;
    getPressedKeyCodes(): number[];

    filter(event: FilterEvent): void;
}

declare var key: Keymaster;

declare module "keymaster" {
export = key;
}
